generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String    @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  password           String?
  isTwoFactorEnabled Boolean   @default(false)
  role               Role      @default(USER)

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  TwoFactorToken TwoFactorToken[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailToken {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  email   String
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  email   String
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  email   String
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Job {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  description String
  companyLogo String?
  companyName String
  applyUrl    String?
  applyEmail  String?
  location    String
  salary      Int
  type        String
  approved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
